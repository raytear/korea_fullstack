/* 1. 변수 정의: 테마 컬러 설정 */
@layer base {
  :root {
    --dark-theme-brand-color: hsl(182, 68%, 21%);
    --light-theme-brand-color: hsl(182, 83%, 43%);
  }
}

/* 2. 테마 적용: 밝은 테마를 기본으로 brand-color 지정 */
@layer theme {
  :root {
    --brand-color: var(--light-theme-brand-color);
  }
}

/* 3. 컴포넌트 계층: 다른 요소에서 사용할 brand-color-component 지정 */
@layer component {
  :root {
    --brand-color-component: var(--brand-color);
  }
}

/* 4. 스타일 우선순위 실험 */
@layer component, base;

@layer base {
  h1 {
    color: red; /* 기본 스타일: 빨간색 */
  }
}
@layer component {
  h1 {
    color: blue; /* 컴포넌트 레이어에서 덮어쓰기 */
  }
}

/* 5. 변수 사용 & 강제 덮어쓰기 예시 */
div {
  --text-color: red;
}
h1 {
  color: var(--text-color) !important; /* 변수 사용 + !important 강제 적용 */
}
body:has(h1) h1 {
  color: blue; /* body가 h1 포함 시 색상 변경 */
}

/* 6. Container Query 적용을 위한 구조 설정 */
div#first {
  container-type: inline-size; /* 컨테이너 유형: 너비 기반 */
  container-name: test;        /* 컨테이너 이름: test */
  width: 400px;
}
div#second {
  width: 600px;
}
div#third {
  width: 800px;
}

/* 7. Container Query: test 컨테이너 너비가 500px 미만일 때 */
@container test (width < 500px) {
  h1 {
    font-size: 5cqw; /* 컨테이너 너비의 5% */
    color: red;
  }
}

/* 8. Media Query: 뷰포트 너비 기준 반응형 설정 */
@layer media {
  @media screen and (width < 568px) {
    h1 {
      color: blue; /* 모바일 환경에서 색상 변경 */
    }
  }
}